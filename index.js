// ุงุณุชูุฑุงุฏ ุงูููุชุจุงุช ุจุงุณุชุฎุฏุงู ุตูุบุฉ import
import 'dotenv/config'; 
import { Client } from 'discord.js-selfbot-v13';
import { Streamer } from '@dank074/discord-video-stream'; 
import express from 'express';

const app = express();
const port = process.env.PORT || 3000;

// ุฑุงุจุท ููู ููุฏูู ูุงุณุชุฎุฏุงูู ูู "ุดุงุดุฉ ุณูุฏุงุก" ููุจุซ.
const BLACK_SCREEN_VIDEO_URL = 'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4'; 

// ุฅุนุฏุงุฏ ุฎุงุฏู Express
app.get('/', (req, res) => {
    res.send('ุงูุจูุช ูุนูู ูุฌุงูุฒ!');
});
app.listen(port, () => {
    console.log(`ุฎุงุฏู Express ูุนูู ุนูู ุงููููุฐ: ${port}`);
});

const client = new Client();
// ุชููุฆุฉ ุนููู Streamer
const streamer = new Streamer(client); 

// ูุชุบูุฑุงุช ูุชุชุจุน ุญุงูุฉ ุงูุงุชุตุงู ูุงูุจุซ
let currentVoiceConnection = null;

client.on('ready', async () => {
    console.log(`ุงูุจูุช: ${client.user.username} ุฌุงูุฒ ููุนูู!`);
});

client.on('messageCreate', async (message) => {
    // ุชุฌุงูู ุงูุฑุณุงุฆู ุงูุชู ูุง ุชุฃุชู ูู ุญุณุงุจ ุงูุจูุช ููุณู
    if (message.author.id !== client.user.id) return;

    const content = message.content.toLowerCase();
    const channelId = process.env.CHANNEL_ID;
    const guildId = process.env.GUILD_ID;

    // ุฏุงูุฉ ูุณุงุนุฏุฉ ูุชุญุฏูุซ ุญุงูุฉ ุงููููุช/ุงูุฏููู
    async function updateVoiceState(deaf, mute) {
        if (!message.guild || !client.user) return;
        const member = message.guild.members.cache.get(client.user.id);

        if (member && member.voice.channel) {
            try {
                // ุงุณุชุฎุฏุงู Streamer ูุชุญุฏูุซ ุญุงูุฉ ุงููููุช/ุงูุฏููู
                await streamer.setDeaf(deaf);
                await streamer.setMute(mute);
                return true;
            } catch (error) {
                console.error("ุฎุทุฃ ูู ุชุญุฏูุซ ุญุงูุฉ ุงูุตูุช:", error);
                message.channel.send(`โ ุฎุทุฃ ูู ุชุญุฏูุซ ุญุงูุฉ ุงูุตูุช: ${error.message}`);
                return false;
            }
        }
        message.channel.send('โ ุงูุจูุช ุบูุฑ ูุชุตู ุจุฑูู ุตูุชู ูุชุบููุฑ ุญุงูุชู.');
        return false;
    }

    // ุงูุฃูุฑ !join
    if (content === '!join') {
        if (currentVoiceConnection) {
            message.channel.send('โ ุงูุจูุช ูุชุตู ุจุงููุนู ุจุฑูู ุตูุชู!');
            return;
        }

        try {
            const channel = await client.channels.fetch(channelId);
            if (!channel || channel.type !== 'GUILD_VOICE') {
                message.channel.send('โ ูู ูุชู ุงูุนุซูุฑ ุนูู ุงูุฑูู ุงูุตูุชู ุงููุญุฏุฏ.');
                return;
            }

            // ุงูุงูุถูุงู ููุฑูู ุจุงุณุชุฎุฏุงู streamer.joinVoice
            const connection = await streamer.joinVoice(guildId, channelId); 
            currentVoiceConnection = connection;

            message.channel.send('โ ุชู ุงูุงุชุตุงู ุจุงูุฑูู ุงูุตูุชู ุจูุฌุงุญ.');
            console.log('โ ุชู ุงูุงูุถูุงู ููุฑูู ุงูุตูุชู.');
        } catch (error) {
            console.error('ุฎุทุฃ ุฃุซูุงุก ูุญุงููุฉ ุงูุงูุถูุงู ููุฑูู:', error.message);
            message.channel.send('โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ูุญุงููุฉ ุงูุงูุถูุงู ููุฑูู.');
        }
    }

    // ุงูุฃูุฑ !afk
    if (content === '!afk') {
        if (currentVoiceConnection) {
            message.channel.send('โ ุงูุจูุช ูุชุตู ุจุงููุนู ุจุฑูู ุตูุชู!');
            return;
        }
        try {
            let foundChannel = null;
            const senderGuild = client.guilds.cache.get(message.guildId);
            const me = senderGuild.members.cache.get(client.user.id);
            if (me && me.voice.channel) {
                foundChannel = me.voice.channel;
            }

            if (!foundChannel) {
                message.channel.send('โ ูุฌุจ ุฃู ุชููู ูุชุตูุงู ุจุฑูู ุตูุชู ุฃููุงู ูุชุดุบูู ูุฐุง ุงูุฃูุฑ.');
                return;
            }

            // ุงูุงูุถูุงู ููุฑูู ุจุงุณุชุฎุฏุงู streamer.joinVoice
            const connection = await streamer.joinVoice(foundChannel.guild.id, foundChannel.id);
            currentVoiceConnection = connection;

            message.channel.send(`โ ุชู ุชูุนูู ูุถุน AFK ูู ุงูุฑูู: ${foundChannel.name}`);
            console.log(`โ ุชูุนูู AFK ูู ุงูุฑูู: ${foundChannel.name}`);
        } catch (err) {
            console.error('โ ุฎุทุฃ ูู ุฃูุฑ AFK:', err.message);
            message.channel.send('โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ูุญุงููุฉ ุชุดุบูู ุฃูุฑ AFK.');
        }
    }

    // ุงูุฃูุฑ !mute (ูุชู/ุฅูุบุงุก ุงููุชู)
    if (content === '!mute') {
        const member = message.guild.members.cache.get(client.user.id);
        if (member && member.voice.channel) {
            const targetMuteState = !member.voice.mute; // ุนูุณ ุงูุญุงูุฉ ุงูุญุงููุฉ
            const success = await updateVoiceState(member.voice.deaf, targetMuteState);
            if (success) {
                message.channel.send(targetMuteState ? '๐ ุชู ูุชู ุงูุตูุช.' : '๐ ุชู ุฅูุบุงุก ูุชู ุงูุตูุช.');
            }
        }
    }

    // ุงูุฃูุฑ !deafen (ุนุฒู/ุฅูุบุงุก ุงูุนุฒู)
    if (content === '!deafen') {
        const member = message.guild.members.cache.get(client.user.id);
        if (member && member.voice.channel) {
            const targetDeafState = !member.voice.deaf; // ุนูุณ ุงูุญุงูุฉ ุงูุญุงููุฉ
            const success = await updateVoiceState(targetDeafState, member.voice.mute);
            if (success) {
                message.channel.send(targetDeafState ? '๐ ุชู ุนุฒู ุงูุตูุช (Deafen).' : '๐ ุชู ุฅูุบุงุก ุนุฒู ุงูุตูุช.');
            }
        }
    }

    // ุงูุฃูุฑ !screenshare (ุชู ุฅุตูุงุญู ููุณุชุฎุฏู streamer.play)
    if (content === '!screenshare') {
        if (!currentVoiceConnection) {
            message.channel.send('โ ุงูุจูุช ุบูุฑ ูุชุตู ุจุฑูู ุตูุชู. ุงุณุชุฎุฏู !join ุฃู !afk ุฃููุงู.');
            return;
        }
        
        try {
            // ุงุณุชุฎุฏุงู streamer.play ูุจุงุดุฑุฉ ูุชุดุบูู ุงูุจุซ
            // ูุฐู ูู ุงูุทุฑููุฉ ุงูุฌุฏูุฏุฉ ูุงูุตุญูุญุฉ ูู ุงูุฅุตุฏุงุฑุงุช ุงูุฃุฎูุฑุฉ
            const streamPlayer = streamer.play(BLACK_SCREEN_VIDEO_URL, currentVoiceConnection);

            streamPlayer.on('start', () => {
                message.channel.send('โ ุชู ุจุฏุก ูุดุงุฑูุฉ ุงูุดุงุดุฉ (Go Live).');
                console.log('โ ุชู ุจุฏุก ุงูุจุซ.');
            });
            
            streamPlayer.on('error', (error) => {
                console.error('ุฎุทุฃ ูู ูุดุบู ุงูุจุซ:', error.message);
                message.channel.send('โ ุฎุทุฃ ุฃุซูุงุก ุชุดุบูู ุงูุจุซ. (ูู FFmpeg ููุซุจุชุ)');
            });

            // ูุง ูุญุชุงุฌ ููุชุบูุฑ ุนุงููู ูู streamPlayerุ ูุฃูู ุณูุนูู ุญุชู ูุชู ุงุณุชุฏุนุงุก .destroy ุฃู !leave
            
        } catch (error) {
            console.error('โ ุฎุทุฃ ูู ุฃูุฑ Screenshare:', error.message);
            message.channel.send(`โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ูุญุงููุฉ ูุดุงุฑูุฉ ุงูุดุงุดุฉ: ${error.message}`);
        }
    }

    // ุงูุฃูุฑ !stopshare
    if (content === '!stopshare') {
        // ุจูุง ุฃู streamer.play ูุง ููุนูุฏ ูุดุบููุง ูููู ุฅููุงูู ุจุณูููุฉุ ุณูุนุชูุฏ ุนูู ุงูุฎุฑูุฌ ูู ุงูุฑูู ุฃู ุฅููุงุก ุงูุจุซ.
        // ุงูุญู ุงูุนููู ูู ุฅููุงู ุงูููุฏูู ุซู ุงูุฎุฑูุฌ ูุงูุฏุฎูู ูุฑุฉ ุฃุฎุฑู ุฅู ูุฒู ุงูุฃูุฑ.
        if (currentVoiceConnection) {
            // ุฅููุงู ุงูููุฏูู ุนูู ุงุชุตุงู ุงูุฏูุณููุฑุฏ
            currentVoiceConnection.setVideo(false); 
            message.channel.send('โ ุชู ุฅููุงู ูุดุงุฑูุฉ ุงูุดุงุดุฉ. ุฅุฐุง ูู ูุชููู ุงูุจุซุ ูุฏ ุชุญุชุงุฌ ุฅูู !leave ุซู !join.');
        } else {
            message.channel.send('โ ูุง ููุฌุฏ ุจุซ ุดุงุดุฉ ูุนุงู ูุฅููุงูู.');
        }
    }

    // ุงูุฃูุฑ !leave
    if (content === '!leave') {
        if (!currentVoiceConnection) {
            message.channel.send('โ ุงูุจูุช ุบูุฑ ูุชุตู ุจุฑูู ุตูุชู.');
            return;
        }
        
        try {
            // ุงุณุชุฎุฏุงู ูุธููุฉ destroy ููุฎุฑูุฌ ูู ุงูุฑูู
            await currentVoiceConnection.destroy();
            currentVoiceConnection = null;

            message.channel.send('โ ุชู ุงูุฎุฑูุฌ ูู ุงูุฑูู ุงูุตูุชู.');
            console.log('โ ุชู ุงูุฎุฑูุฌ ูู ุงูุฑูู ุงูุตูุชู.');
        } catch (error) {
            console.error('ุฎุทุฃ ุฃุซูุงุก ุงูุฎุฑูุฌ ูู ุงูุฑูู:', error.message);
            message.channel.send('โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ูุญุงููุฉ ุงูุฎุฑูุฌ ูู ุงูุฑูู.');
        }
    }
});

client.login(process.env.TOKEN);
