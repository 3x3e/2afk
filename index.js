// ุงุณุชูุฑุงุฏ ุงูููุชุจุงุช ุจุงุณุชุฎุฏุงู ุตูุบุฉ import
import 'dotenv/config'; 
import { Client } from 'discord.js-selfbot-v13';
import { Streamer } from '@dank074/discord-video-stream'; 
import express from 'express';

const app = express();
const port = process.env.PORT || 3000;

// ุฑุงุจุท ููู ููุฏูู ูุงุณุชุฎุฏุงูู ูู "ุดุงุดุฉ ุณูุฏุงุก" ููุจุซ.
const BLACK_SCREEN_VIDEO_URL = 'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4'; 

// ุฅุนุฏุงุฏ ุฎุงุฏู Express
app.get('/', (req, res) => {
    res.send('ุงูุจูุช ูุนูู ูุฌุงูุฒ!');
});
app.listen(port, () => {
    console.log(`ุฎุงุฏู Express ูุนูู ุนูู ุงููููุฐ: ${port}`);
});

const client = new Client();
// ุชููุฆุฉ ุนููู Streamer
const streamer = new Streamer(client); 

// ูุชุบูุฑุงุช ูุชุชุจุน ุญุงูุฉ ุงูุงุชุตุงู ูุงูุจุซ
let currentVoiceConnection = null;

client.on('ready', async () => {
    console.log(`ุงูุจูุช: ${client.user.username} ุฌุงูุฒ ููุนูู!`);
});

// ุฏุงูุฉ ูุณุงุนุฏุฉ ุนุงูุฉ ููุนุซูุฑ ุนูู ุงูุฑูู ุงูุตูุชู ุงูุฐู ูุชูุงุฌุฏ ููู ุงููุณุชุฎุฏู (ุงูุณููู ุจูุช)
function getBotVoiceState() {
    if (!client.user) return null;
    
    // ุงูุจุญุซ ูู ุฌููุน ุงูุณูุฑูุฑุงุช ุงููุชุตู ุจูุง
    for (const guild of client.guilds.cache.values()) {
        const member = guild.members.cache.get(client.user.id);
        if (member && member.voice.channel) {
            // ุฅุฑุฌุงุน ูุงุฆู ุงูุนุถู ูุญุงูุฉ ุงูุงุชุตุงู
            return { member, connection: currentVoiceConnection };
        }
    }
    return null;
}

// ุฏุงูุฉ ูุณุงุนุฏุฉ ุฌุฏูุฏุฉ: ููุนุซูุฑ ุนูู ุงูุฑูู ุงูุตูุชู ูููุณุชุฎุฏู (ุฃูุช)
function findUserVoiceChannel() {
    if (!client.user) return null;
    
    // ุงูุจุญุซ ุนู ุงููุณุชุฎุฏู (ุงูุณููู ุจูุช) ูู ูู ุงูุณูุฑูุฑุงุช
    for (const guild of client.guilds.cache.values()) {
        const member = guild.members.cache.get(client.user.id);
        // ุฅุฐุง ูุงู ุงูุนุถู ูุชุตูุงู ุจุฑูู ุตูุชูุ ููุนูุฏ ููุงุฉ ุงูุตูุช
        if (member && member.voice.channel) {
            return member.voice.channel;
        }
    }
    return null;
}


client.on('messageCreate', async (message) => {
    // ุชุฌุงูู ุงูุฑุณุงุฆู ุงูุชู ูุง ุชุฃุชู ูู ุญุณุงุจ ุงูุจูุช ููุณู
    if (message.author.id !== client.user.id) return;
    
    const content = message.content.toLowerCase();
    const channelId = process.env.CHANNEL_ID;
    const guildId = process.env.GUILD_ID;

    // ุฏุงูุฉ ูุณุงุนุฏุฉ ูุชุญุฏูุซ ุญุงูุฉ ุงููููุช/ุงูุฏููู
    async function updateVoiceState(deaf, mute) {
        const state = getBotVoiceState();

        if (state) {
            try {
                // ุงุณุชุฎุฏุงู Streamer ูุชุญุฏูุซ ุญุงูุฉ ุงููููุช/ุงูุฏููู
                await streamer.setDeaf(deaf);
                await streamer.setMute(mute);
                return true;
            } catch (error) {
                message.channel.send(`โ ุฎุทุฃ ูู ุชุญุฏูุซ ุญุงูุฉ ุงูุตูุช: ${error.message}`);
                return false;
            }
        }
        message.channel.send('โ ุงูุจูุช ุบูุฑ ูุชุตู ุจุฑูู ุตูุชู ูุชุบููุฑ ุญุงูุชู.');
        return false;
    }
    
    // ุงูุฃูุฑ !reset
    if (content === '!reset') {
        if (currentVoiceConnection) {
            try {
                await currentVoiceConnection.destroy();
            } catch (e) {
                // ุชุฌุงูู ุฎุทุฃ ุงูุชุฏููุฑ ุฅุฐุง ูุงู ุงูุงุชุตุงู ุบูุฑ ุตุงูุญ ุจุงููุนู
            }
        }
        currentVoiceConnection = null;
        message.channel.send('โ ุชู ุชุตููุฑ ุญุงูุฉ ุงูุงุชุตุงู ุจูุฌุงุญ. ููููู ุงูุขู ุงุณุชุฎุฏุงู !join ุฃู !afk.');
        return;
    }


    // ุงูุฃูุฑ !join
    if (content === '!join') {
        if (currentVoiceConnection) {
            message.channel.send('โ ุงูุจูุช ูุชุตู ุจุงููุนู ุจุฑูู ุตูุชู! ุฅุฐุง ูู ููู ูุฐููุ ุงุณุชุฎุฏู !reset.');
            return;
        }

        try {
            const channel = await client.channels.fetch(channelId);
            if (!channel || channel.type !== 'GUILD_VOICE' || !guildId) {
                message.channel.send('โ ูู ูุชู ุงูุนุซูุฑ ุนูู ุงูุฑูู/ุงูุณูุฑูุฑ ุงููุญุฏุฏ ูู .env ุฃู ุงููุนูููุงุช ุบูุฑ ุตุญูุญุฉ.');
                return;
            }
            
            const connection = await streamer.joinVoice(guildId, channelId); 
            currentVoiceConnection = connection;

            message.channel.send('โ ุชู ุงูุงุชุตุงู ุจุงูุฑูู ุงูุตูุชู ุจูุฌุงุญ.');
        } catch (error) {
            message.channel.send('โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ูุญุงููุฉ ุงูุงูุถูุงู ููุฑูู. (ุชุฃูุฏ ูู ูุฌูุฏ ุงูุจูุช ูู ุงูุณูุฑูุฑ).');
        }
    }

    // ุงูุฃูุฑ !afk (ูุนูู ุงูุขู ูู ุฃู ููุงู)
    if (content === '!afk') {
        if (currentVoiceConnection) {
            message.channel.send('โ ุงูุจูุช ูุชุตู ุจุงููุนู ุจุฑูู ุตูุชู! ุฅุฐุง ูู ููู ูุฐููุ ุงุณุชุฎุฏู !reset.');
            return;
        }
        
        try {
            // ุงูุจุญุซ ุนู ุงูุฑูู ุงูุตูุชู ุงูุฐู ูุชูุงุฌุฏ ููู ุงููุณุชุฎุฏู (ุงูุณููู ุจูุช)
            const foundChannel = findUserVoiceChannel();
            
            if (!foundChannel) {
                message.channel.send('โ ูุฌุจ ุฃู ุชููู ูุชุตูุงู ุจุฑูู ุตูุชู ุฃููุงู ูุชุดุบูู ูุฐุง ุงูุฃูุฑ.');
                return;
            }

            const connection = await streamer.joinVoice(foundChannel.guild.id, foundChannel.id);
            currentVoiceConnection = connection;

            message.channel.send(`โ ุชู ุชูุนูู ูุถุน AFK ูู ุงูุฑูู: ${foundChannel.name}`);
        } catch (err) {
            message.channel.send('โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ูุญุงููุฉ ุชุดุบูู ุฃูุฑ AFK.');
        }
    }

    // ุฃูุงูุฑ ุงูุชุญูู ูู ุงูุตูุช ูุงูุจุซ (!mute, !deafen, !screenshare, !stopshare)
    if (content === '!mute' || content === '!deafen' || content === '!screenshare' || content === '!stopshare') {
        
        const state = getBotVoiceState();
        
        if (!state) {
            message.channel.send('โ ุงูุจูุช ุบูุฑ ูุชุตู ุจุฑูู ุตูุชู ูุชูููุฐ ูุฐุง ุงูุฃูุฑ.');
            return;
        }

        const member = state.member;
        
        if (content === '!mute') {
            const targetMuteState = !member.voice.mute; 
            const success = await updateVoiceState(member.voice.deaf, targetMuteState);
            if (success) {
                message.channel.send(targetMuteState ? '๐ ุชู ูุชู ุงูุตูุช.' : '๐ ุชู ุฅูุบุงุก ูุชู ุงูุตูุช.');
            }
        } 
        
        else if (content === '!deafen') {
            const targetDeafState = !member.voice.deaf; 
            const success = await updateVoiceState(targetDeafState, member.voice.mute);
            if (success) {
                message.channel.send(targetDeafState ? '๐ ุชู ุนุฒู ุงูุตูุช (Deafen).' : '๐ ุชู ุฅูุบุงุก ุนุฒู ุงูุตูุช.');
            }
        } 
        
        else if (content === '!screenshare') {
            try {
                // ุงุณุชุฎุฏุงู streamer.play ูุจุงุดุฑุฉ ูุชุดุบูู ุงูุจุซ
                const streamPlayer = streamer.play(BLACK_SCREEN_VIDEO_URL, currentVoiceConnection);

                streamPlayer.on('start', () => {
                    message.channel.send('โ ุชู ุจุฏุก ูุดุงุฑูุฉ ุงูุดุงุดุฉ (Go Live).');
                });
                
                streamPlayer.on('error', (error) => {
                    message.channel.send('โ ุฎุทุฃ ุฃุซูุงุก ุชุดุบูู ุงูุจุซ. (ูู FFmpeg ููุซุจุชุ)');
                });
                
            } catch (error) {
                message.channel.send(`โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ูุญุงููุฉ ูุดุงุฑูุฉ ุงูุดุงุดุฉ: ${error.message}`);
            }
        } 
        
        else if (content === '!stopshare') {
            // ุฅููุงู ุงูููุฏูู ุนูู ุงุชุตุงู ุงูุฏูุณููุฑุฏ
            currentVoiceConnection.setVideo(false); 
            message.channel.send('โ ุชู ุฅููุงู ูุดุงุฑูุฉ ุงูุดุงุดุฉ.');
        }
    }


    // ุงูุฃูุฑ !leave
    if (content === '!leave') {
        if (!currentVoiceConnection) {
            message.channel.send('โ ุงูุจูุช ุบูุฑ ูุชุตู ุจุฑูู ุตูุชู.');
            return;
        }
        
        try {
            await currentVoiceConnection.destroy();
            currentVoiceConnection = null;

            message.channel.send('โ ุชู ุงูุฎุฑูุฌ ูู ุงูุฑูู ุงูุตูุชู.');
        } catch (error) {
            // ูู ุญุงูุฉ ูุดู ุงูุฎุฑูุฌุ ูููู ุจุชุตููุฑ ุงููุชุบูุฑ ูุฏููุงู
            currentVoiceConnection = null;
            message.channel.send('โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ูุญุงููุฉ ุงูุฎุฑูุฌ ูู ุงูุฑูู. ุชู ุชุตููุฑ ุงูุญุงูุฉ ูุฏููุงู. ููููู ุงูุขู ุงุณุชุฎุฏุงู !join.');
        }
    }
});

client.login(process.env.TOKEN);
